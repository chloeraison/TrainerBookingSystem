@page
@model TrainerBookingSystem.Web.Pages.DashboardModel
@{
    ViewData["Title"] = "Trainer Dashboard";

    // Prev / next month labels & targets
    int prevY = (Model.VisibleMonth == 1) ? Model.VisibleYear - 1 : Model.VisibleYear;
    int prevM = (Model.VisibleMonth == 1) ? 12 : Model.VisibleMonth - 1;
    int nextY = (Model.VisibleMonth == 12) ? Model.VisibleYear + 1 : Model.VisibleYear;
    int nextM = (Model.VisibleMonth == 12) ? 1 : Model.VisibleMonth + 1;

    string header    = new DateTime(Model.VisibleYear, Model.VisibleMonth, 1).ToString("MMMM yyyy");
    string prevLabel = new DateTime(prevY, prevM, 1).ToString("MMM yyyy");
    string nextLabel = new DateTime(nextY, nextM, 1).ToString("MMM yyyy");
}

<div class="dashboard-page-content">
    <h1 style="margin-bottom:10px;">Trainer Dashboard</h1>

    <div style="display:flex;gap:18px;align-items:center;margin-bottom:10px;">
        <a class="btn" asp-page="/Dashboard" asp-route-year="@prevY" asp-route-month="@prevM" asp-route-selected="@Model.selected">
            ‚Üê @prevLabel
        </a>

        <div style="font-weight:800;font-size:22px;">@header</div>

        <a class="btn" asp-page="/Dashboard" asp-route-year="@nextY" asp-route-month="@nextM" asp-route-selected="@Model.selected">
            @nextLabel ‚Üí
        </a>
    </div>

    <div class="dashboard-layout">
        <!-- LEFT: Month calendar -->
        <section>
            <div class="cal-weekdays">
                <div>Mon</div><div>Tue</div><div>Wed</div><div>Thu</div><div>Fri</div><div>Sat</div><div>Sun</div>
            </div>

            <div class="cal-grid">
                @foreach (var cell in Model.MonthCells)
                {
                    var isSelected = Model.SelectedDates.Contains(cell.Date.Date);
                    var toggle = Model.ToggleSelection(cell.Date);

                    <a class="cal-cell @(cell.InCurrentMonth ? "" : "muted") @(isSelected ? "selected" : "")"
                       asp-page="/Dashboard"
                       asp-route-year="@Model.VisibleYear"
                       asp-route-month="@Model.VisibleMonth"
                       asp-route-selected="@toggle"
                       title="@cell.Date.ToString("dddd dd MMM")">

                        <div class="cal-date">@cell.Date.Day</div>

                        @if (cell.BookingCount > 0)
                        {
                            <div class="cal-count">@cell.BookingCount</div>
                        }
                    </a>
                }
            </div>

            <p style="color:var(--muted);margin-top:8px;">Tip: click multiple days to compare on the right.</p>
        </section>

        <!-- RIGHT: Selected days panel -->
        <aside class="card side-panel">
            <h3 style="margin-top:0;">Selected days</h3>

            @if (Model.SelectedDates.Count == 0)
            {
                <p style="color:var(--muted);">No days selected. Click days in the calendar to compare.</p>
            }
            else
            {
                <!-- chips for each selected day + Clear all -->
                <div style="display:flex;flex-wrap:wrap;gap:6px;margin-bottom:10px;">
                    @foreach (var d in Model.SelectedDates.OrderBy(d => d))
                    {
                        var toggle = Model.ToggleSelection(d);
                        <a class="badge"
                           asp-page="/Dashboard"
                           asp-route-year="@Model.VisibleYear"
                           asp-route-month="@Model.VisibleMonth"
                           asp-route-selected="@toggle"
                           title="Unselect">
                            @d.ToString("ddd dd MMM") ‚úï
                        </a>
                    }

                    <!-- Clear all -->
                    <a class="badge"
                       asp-page="/Dashboard"
                       asp-route-year="@Model.VisibleYear"
                       asp-route-month="@Model.VisibleMonth"
                       asp-route-selected="">
                        Clear all
                    </a>
                </div>

                <!-- day cards -->
                @foreach (var card in Model.SelectedDayCards)
                {
                    var toggle = Model.ToggleSelection(card.Date);
                    var dateIso = card.Date.ToString("yyyy-MM-dd");

                    <div class="card day-card" data-date="@dateIso" style="padding:10px;margin-bottom:14px;">

                        <div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:6px;">
                            <div style="font-weight:800;">@card.Date.ToString("dddd dd MMM")</div>

                            <div style="display:flex;gap:6px;align-items:flex-start;">
                                <span class="muted" id="selcount-@dateIso" style="font-size:.9rem;"></span>
                                <button type="button" class="btn" onclick="handleCancel('@dateIso')">Cancel</button>
                                <button type="button" class="btn" onclick="handleAmend('@dateIso')">Amend</button>
                                <form method="post" asp-page-handler="OpenBlock" class="inline">
                                    @Html.AntiForgeryToken()
                                    <button class="btn btn-secondary">üö´</button>
                                </form>
                            </div>
                        </div>

                        @* ===== Timeline (read-only) ===== *@
                        @{
                            // window for this day card
                            var dayStart = new TimeSpan(8, 0, 0);
                            var dayEnd   = new TimeSpan(22, 0, 0);
                            var totalMin = (int)(dayEnd - dayStart).TotalMinutes;

                            // scale: 1.0 => 60px/hour, 1.2 => 72px/hour (tweak to taste)
                            var pxPerMin     = 1.2;
                            var scaledHeight = (int)Math.Round(totalMin * pxPerMin);
                        }

                        @if (!card.Bookings.Any() && !card.Blocks.Any())
                        {
                            <div style="color:var(--muted);margin-top:8px;">No bookings yet.</div>
                        }
                        else
                        {
                            <div class="day-schedule"
                                style="--px-per-min:@pxPerMin; --time-col:64px; height:@(scaledHeight)px;">
                                @* Hour grid *@
                                @for (var h = dayStart.Hours; h <= dayEnd.Hours; h++)
                                {
                                    var top = (h - dayStart.Hours) * 60; // minutes from start
                                    <div class="hour-row" style="--hour-top:@top;">
                                        <div class="hour-label">@($"{h:00}:00")</div>
                                        <div class="hour-line"></div>
                                    </div>
                                }

                                @* ===== Inside the schedule: BLOCK BANDS (behind bookings) ===== *@
                                <div class="events-layer">
                                    @* Blocks first (z-index lower) *@
                                    @foreach (var bl in card.Blocks)
                                    {
                                        var rawStart = bl.StartTime;
                                        var rawEnd   = bl.StartTime + bl.Duration;

                                        // clip to the visible window
                                        var start = rawStart < dayStart ? dayStart : rawStart;
                                        var end   = rawEnd   > dayEnd   ? dayEnd   : rawEnd;

                                        if (end <= start) { continue; }

                                        var offsetMin = Math.Max(0, (int)(start - dayStart).TotalMinutes);
                                        var durMin    = Math.Max(1, (int)(end - start).TotalMinutes);

                                        <div class="block-band"
                                             style="--start-min:@offsetMin; --dur-min:@durMin;">
                                            <div class="block-band-inner">
                                                <span class="block-band-time">@start.ToString(@"hh\:mm")‚Äì@end.ToString(@"hh\:mm")</span>
                                                @if (!string.IsNullOrWhiteSpace(bl.Note))
                                                {
                                                    <span class="block-band-note">@bl.Note</span>
                                                }
                                            </div>

                                        </div>
                                    }

                                    @* ===== Events (bookings) above blocks ===== *@
                                    @foreach (var b in card.Bookings.OrderBy(b => b.StartTime))
                                    {
                                        var start = b.StartTime < dayStart ? dayStart : b.StartTime;
                                        var end   = b.StartTime + b.Duration;
                                        if (end > dayEnd) end = dayEnd;

                                        var offsetMin = Math.Max(0, (int)(start - dayStart).TotalMinutes);
                                        var durMin    = Math.Max(60, (int)(end - start).TotalMinutes); // min 60 mins

                                        <div class="event z-10"
                                             data-booking-id="@b.Id"
                                             onclick="toggleEvent(this, '@dateIso')"
                                             style="--start-min:@offsetMin; --dur-min:@durMin;">
                                            <div class="event-click">
                                                <div class="event-time">@b.StartTime.ToString(@"hh\:mm")</div>
                                                <div class="event-title client-name">
                                                    @(b.Client?.Name ?? "Unknown client")
                                                </div>

                                                <div class="event-meta">@b.SessionType ‚Ä¢ @(b.Duration.TotalMinutes) mins</div>

                                                <div class="event-actions">
                                                    <a class="btn btn-ghost btn-xs"
                                                       asp-page="/Details"
                                                       asp-route-id="@b.ClientId"
                                                       onclick="event.stopPropagation();">
                                                        View client
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div> <!-- /.day-card -->
                } <!-- /foreach day card -->
            } <!-- /else (selected dates) -->
        </aside>
    </div>
</div>

<!-- Hidden form reused for bulk actions -->
<form id="bulkActionForm" method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" name="date" />
    <input type="hidden" name="bookingIdsCsv" />
    <input type="hidden" name="returnYear" value="@Model.VisibleYear" />
    <input type="hidden" name="returnMonth" value="@Model.VisibleMonth" />
    <input type="hidden" name="returnSelected" value="@Model.selected" />
</form>

<style>
    /* (kept inline so nothing else changes for now) */
    .cal-weekdays { display:grid; grid-template-columns:repeat(7,1fr); gap:10px; margin-bottom:6px; color:var(--muted); font-weight:700; }
    .cal-weekdays>div { padding:4px 0; text-align:center; }
    .cal-grid { display:grid; grid-template-columns:repeat(7,1fr); gap:10px; }
    .cal-cell { display:block; background:var(--card); border:1px solid var(--border); border-radius:12px; padding:10px; min-height:86px; position:relative; text-decoration:none; color:var(--text); }
    .cal-cell:hover { border-color:var(--accent); }
    .cal-cell.muted { opacity:.45; }
    .cal-cell.selected { outline:2px solid var(--accent); outline-offset:1px; }
    .cal-date { font-weight:800; }
    .cal-count { position:absolute; right:8px; bottom:8px; font-size:.75rem; background:var(--pill-bg); border:1px solid var(--pill-border); border-radius:999px; padding:2px 6px; line-height:1; }

    .side-panel { position:sticky; top:16px; padding:12px; align-self:start; }
    .booking.selectable { border:1px solid var(--border); }
    .booking.selectable.selected { outline:2px solid var(--accent); outline-offset:0; }
    .muted { color:var(--muted); }

    /* Day schedule */
    .day-schedule { position:relative; background:var(--card); border:1px solid var(--border); border-radius:10px; overflow:hidden; margin-top:4px; }
    .hour-row { position:absolute; left:0; right:0; top:calc(var(--hour-top) * var(--px-per-min) * 1px); height:calc(60 * var(--px-per-min)); transform:none; }
    .hour-label { position:absolute; left:8px; width:var(--time-col); font-size:.8rem; color:var(--muted); top:-7px; }
    .hour-line { position:absolute; left:calc(var(--time-col) + 6px); right:8px; top:0; height:1px; background: color-mix(in srgb, var(--border) 85%, transparent); }

    .events-layer { position:relative; margin-left:calc(var(--time-col) + 12px); margin-right:8px; height:100%; }

    .event { position:absolute; left:0; right:0; top:calc(var(--start-min) * var(--px-per-min) * 1px); height:calc(var(--dur-min) * var(--px-per-min) * 1px); box-sizing:border-box; }
    .event.selected { outline:2px solid var(--accent); outline-offset:0; }
    .event .event-click { padding:8px 10px; }
    .event .event-time { font-weight:800; font-size:.9rem; margin-bottom:2px; }
    .event .event-title { font-weight:700; }
    .event .event-meta { font-size:.8rem; color:var(--muted); }

    /* Blocks as subtle bands behind bookings */
    .block-band{
        position:absolute;
        left:0; right:0;
        top:calc(var(--start-min) * var(--px-per-min) * 1px);
        height:calc(var(--dur-min) * var(--px-per-min) * 1px);
        border:1px solid rgba(220, 80, 80, 0.45);
        border-radius:10px;
        background:
          repeating-linear-gradient(
            45deg,
            rgba(220, 80, 80, 0.18) 0px,
            rgba(220, 80, 80, 0.18) 10px,
            rgba(220, 80, 80, 0.10) 10px,
            rgba(220, 80, 80, 0.10) 20px
          );
        box-shadow: inset 0 0 0 1px rgba(255,255,255,0.05);
        pointer-events:none; /* don't steal clicks from bookings */
        z-index:0;
        display:flex; align-items:flex-start;
    }

    .block-band-inner{
    position:relative;
    width:100%;
    height:100%;
    font-size:.8rem;
    font-weight:600;
    }

    .block-band-time{
    background:rgba(0,0,0,0.55);
    color:#fff;
    border-radius:4px;
    padding:2px 6px;
    position:absolute;
    top:4px;
    left:6px;
    }

    .block-band-note{
    font-size:.75rem;
    color:#fff;
    background:rgba(0,0,0,0.4);
    border-radius:4px;
    padding:2px 6px;
    position:absolute;
    bottom:4px;
    right:6px;
    }

</style>

<script>
(function () {
  function updateSelectedCount(dayCardEl) {
    const dayIso = dayCardEl.getAttribute('data-date');
    const count = dayCardEl.querySelectorAll('.event.selected').length;
    const label = document.getElementById(`selcount-${dayIso}`);
    if (label) label.textContent = count > 0 ? `${count} selected` : '';
  }

  window.toggleEvent = function(el, dateIso){
    el.classList.toggle('selected');
    const dayCard = el.closest('.day-card');
    if (dayCard) updateSelectedCount(dayCard);
  };

  window.getSelectedIdsForDate = function(dateIso){
    const day = document.querySelector(`.day-card[data-date="${dateIso}"]`);
    if (!day) return [];
    return Array.from(day.querySelectorAll('.event.selected')).map(e => e.getAttribute('data-booking-id'));
  };

  function submitBulk(actionHandler, dateIso, ids) {
    const form = document.getElementById('bulkActionForm');
    const y   = form.querySelector('input[name="returnYear"]').value;
    const m   = form.querySelector('input[name="returnMonth"]').value;
    const sel = form.querySelector('input[name="returnSelected"]').value || "";
    form.setAttribute('action', `?handler=${actionHandler}&year=${y}&month=${m}&selected=${encodeURIComponent(sel)}`);
    form.querySelector('input[name="date"]').value = dateIso;
    form.querySelector('input[name="bookingIdsCsv"]').value = (ids || []).join(',');
    form.submit();
  }

  window.handleCancel = function(dateIso){
    const ids = window.getSelectedIdsForDate(dateIso);
    if (ids.length === 0) {
      if (!confirm('No bookings selected. This will cancel ALL bookings on this day. Continue?')) return;
    } else {
      if (!confirm(`Cancel ${ids.length} selected booking(s) on ${dateIso}?`)) return;
    }
    submitBulk('CancelBookings', dateIso, ids);
  };

  window.handleAmend = function(dateIso){
    const ids = window.getSelectedIdsForDate(dateIso);
    if (ids.length === 0) {
      if (!confirm('No bookings selected. This amendment will apply to ALL bookings on this day. Continue?')) return;
    }
    submitBulk('AmendBookings', dateIso, ids);
  };
})();
</script>

@if (Model.ShowBlockModal)
{
  <div class="app-modal-backdrop show">
    <div class="app-modal" role="dialog" aria-modal="true" aria-label="Block time">
      <h3>Block time</h3>

      <form method="post" asp-page-handler="CreateBlock">
        @Html.AntiForgeryToken()

        <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
          <div>
            <label class="lbl">Date</label>
            <input asp-for="BlockInput.Date" type="date" class="input" />
            <span asp-validation-for="BlockInput.Date" class="val"></span>
          </div>

          <div>
            <label class="lbl">Start</label>
            <input asp-for="BlockInput.StartTime" type="time" class="input" />
            <span asp-validation-for="BlockInput.StartTime" class="val"></span>
          </div>

          <div>
            <label class="lbl">Duration (mins)</label>
            <input asp-for="BlockInput.DurationMinutes" type="number" min="5" max="720" step="5" class="input" />
            <span asp-validation-for="BlockInput.DurationMinutes" class="val"></span>
          </div>

          <div class="md:col-span-2">
            <label class="lbl">Note (optional)</label>
            <input asp-for="BlockInput.Note" class="input" />
          </div>
        </div>

        <div class="mt-4 flex gap-2">
          <button type="submit" class="btn">Save</button>
          <button formaction="?handler=CloseModals" formmethod="post" class="btn btn-secondary">Cancel</button>
        </div>
      </form>
    </div>
  </div>
}
