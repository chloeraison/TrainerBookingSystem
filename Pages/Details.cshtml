@page "{id:int}"
@model TrainerBookingSystem.Web.Pages.DetailsModel
@{
    ViewData["Title"] = "Client";
}

<section class="client-header">
  <a asp-page="/Clients" class="btn btn-ghost back">‚Üê Back to Clients</a>

  <div class="client-title-inline">
    <span class="avatar-emoji" aria-hidden="true">üë§</span>
    <h1 class="client-title">@Model.Client?.Name</h1>
  </div>
</section>

<!-- === Overview FIRST === -->
<section class="card">
  <div class="card-head">
    <h2>üßæ Overview</h2>
    <a class="btn-icon btn-icon-xs"
       asp-page="/Clients/Edit"
       asp-route-id="@Model.Client?.Id"
       title="Edit client"
       aria-label="Edit client">‚úèÔ∏è</a>
  </div>

  <div class="kv">
    <div>üèãÔ∏è Gym</div>
    <div>@(Model.Client?.Gym ?? "‚Äî")</div>

    <div>üïí Pref. time</div>
    <div>
      @if (Model.PreferredTimeChips.Any())
      {
        foreach (var chip in Model.PreferredTimeChips) { <span class="chip">@chip</span> }
      }
      else { <span class="muted">‚Äî</span> }
    </div>

    <div>üìå Notes</div>
    <div>@(string.IsNullOrWhiteSpace(Model.Client?.Flags) ? "‚Äî" : Model.Client!.Flags)</div>

    <div>üå¥ Holiday</div>
    <div>@(Model.HolidayText ?? "‚Äî")</div>
  </div>

  @* keep your existing mini two-week table here, unchanged *@
  @{
      var week1End = DateTime.Today.AddDays(7);
      var allWeek1 = Model.Next2WeeksBookings
          .Where(b => b.Date < week1End)
          .OrderBy(b => b.Date).ThenBy(b => b.StartTime)
          .ToList();

      var showWeek1 = allWeek1.Take(4).ToList();
      var moreWeek1 = allWeek1.Count - showWeek1.Count;

      var allWeek2 = Model.Next2WeeksBookings
          .Where(b => b.Date >= week1End)
          .OrderBy(b => b.Date).ThenBy(b => b.StartTime)
          .ToList();

      var showWeek2 = allWeek2.Take(4).ToList();
      var moreWeek2 = allWeek2.Count - showWeek2.Count;
  }

  <div class="grid grid-cols-2 gap-3 mt-2">
    <!-- This week -->
    <div>
      <div class="text-sm font-medium opacity-80 mb-1">This week</div>
      <div class="flex flex-wrap gap-2">
        @if (!showWeek1.Any()) {
          <span class="chip chip-red">‚ùå No sessions</span>
        } else {
          foreach (var b in showWeek1) {
            <span class="chip chip-green">‚úÖ @b.Date.ToString("ddd d MMM") ¬∑ @b.StartTime.ToString(@"hh\:mm")</span>
          }
          if (moreWeek1 > 0) { <span class="chip chip-blue">+@moreWeek1 more</span> }
        }
      </div>
    </div>

    <!-- Next week -->
    <div>
      <div class="text-sm font-medium opacity-80 mb-1">Next week</div>
      <div class="flex flex-wrap gap-2">
        @if (!showWeek2.Any()) {
          <span class="chip chip-red">‚ùå No sessions</span>
        } else {
          foreach (var b in showWeek2) {
            <span class="chip chip-green">‚úÖ @b.Date.ToString("ddd d MMM") ¬∑ @b.StartTime.ToString(@"hh\:mm")</span>
          }
          if (moreWeek2 > 0) { <span class="chip chip-blue">+@moreWeek2 more</span> }
        }
      </div>
    </div>
  </div>
</section>



<section class="card">
    <div class="card-head">
        <h2>üéØ Sessions</h2>

        @* primary CTA in-context *@
        @if (Model.Client!.SessionsLeft > 0)
        {
        <a class="btn btn-accent btn-sm"
            asp-page="/Bookings/Create"
            asp-route-clientId="@Model.Client?.Id"
            aria-label="Create a new booking for this client">
            Ôºã New booking
        </a>
        }
        else
        {
        <a class="btn btn-sm"
            asp-page="/Clients/Edit"
            asp-route-id="@Model.Client?.Id"
            title="No sessions left ‚Äî top up">
            Add sessions
        </a>
        }
    </div>

    <div class="session-boxes">
        <!-- Left -->
        <form method="post" asp-page-handler="AdjustCounter" class="counter-box">
            @Html.AntiForgeryToken()
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="target" value="left" />

            <button class="btn-circle btn-circle-left" name="delta" value="-1" aria-label="decrease left">‚àí</button>
            <div class="counter-title">Left</div>
            <div class="counter-value">@Model.Client!.SessionsLeft</div>
            <button class="btn-circle btn-circle-right" name="delta" value="1" aria-label="increase left">+</button>
        </form>

        <!-- Completed -->
        <form method="post" asp-page-handler="AdjustCounter" class="counter-box">
            @Html.AntiForgeryToken()
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="target" value="completed" />

            <button class="btn-circle btn-circle-left" name="delta" value="-1" aria-label="decrease completed">‚àí</button>
            <div class="counter-title">Completed</div>
            <div class="counter-value">@Model.Client!.SessionsCompleted</div>
            <button class="btn-circle btn-circle-right" name="delta" value="1" aria-label="increase completed">+</button>
        </form>
        </div>

    <!-- week / month totals under the counters -->
    <div class="session-totals">
        <div class="stat">
            <div class="stat-num">@Model.WeekCount</div>
            <div class="stat-label">Sessions this week</div>
        </div>
        <div class="stat">
            <div class="stat-num">@Model.MonthCount</div>
            <div class="stat-label">Sessions this month</div>
        </div>
    </div>
</section>

    <section class="card span-2">
        <h2>üìÖ Upcoming</h2>
        @if (!Model.Upcoming.Any())
        {
            <p class="muted">No upcoming bookings.</p>
        }
        else
        {
            <ul class="booking-list">
                @foreach (var b in Model.Upcoming)
                {
                    <li class="booking-item">
                        <div class="b-time">
                            @b.Date.ToString("ddd dd MMM") ¬∑ @b.StartTime.ToString(@"hh\:mm")
                        </div>
                        <div class="b-type">
                            @($"{b.SessionType} ({(int)b.Duration.TotalMinutes} mins)")
                        </div>
                        <div class="b-actions">
                            <!-- View modal -->
                            <form method="post" asp-page-handler="ViewBooking">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@Model.Id" />
                                <input type="hidden" name="bookingId" value="@b.Id" />
                                <button type="submit" class="btn btn-sm btn-ghost">üîç View</button>
                            </form>

                            <!-- Reschedule (opens edit modal) -->
                            <form method="post" asp-page-handler="OpenEdit">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@Model.Id" />
                                <input type="hidden" name="bookingId" value="@b.Id" />
                                <button type="submit" class="btn btn-sm">‚úèÔ∏è Edit</button>
                            </form>

                            <!-- Mark completed -->
                            <form method="post" asp-page-handler="MarkCompleted">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@Model.Id" />
                                <input type="hidden" name="bookingId" value="@b.Id" />
                                <button type="submit" class="btn btn-sm btn-ghost">‚úÖ Completed</button>
                            </form>
                        </div>
                    </li>
                }
            </ul>
        }
    </section>

    <section class="card span-2">
        <h2>üóÇÔ∏è Recent (last 10)</h2>
        @if (!Model.Recent.Any())
        {
            <p class="muted">No recent history.</p>
        }
        else
        {
            <ul class="booking-list compact">
                @foreach (var b in Model.Recent)
                {
                    <li class="booking-item">
                        <div class="b-time">
                            @b.Date.ToString("ddd dd MMM") ¬∑ @b.StartTime.ToString(@"hh\:mm")
                        </div>
                        <div class="b-type">
                            @($"{b.SessionType} ({(int)b.Duration.TotalMinutes} mins)")
                        </div>
                        <div class="b-actions">
                            <form method="post" asp-page-handler="ViewBooking">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@Model.Id" />
                                <input type="hidden" name="bookingId" value="@b.Id" />
                                <button type="submit" class="btn btn-sm btn-ghost">üîç View</button>
                            </form>
                        </div>
                    </li>
                }
            </ul>
        }
    </section>
</div>

<!-- ===== View modal ===== -->
@if (Model.ShowViewModal && Model.ViewBooking != null)
{
    var vb = Model.ViewBooking;
    <div class="app-modal-backdrop show">
        <div class="app-modal" role="dialog" aria-modal="true" aria-label="Booking details">
            <h3>Booking details</h3>
            <p><strong>Client:</strong> @vb.Client?.Name</p>
            <p><strong>When:</strong> @((vb.Date + vb.StartTime).ToString("ddd dd MMM ¬∑ HH:mm"))</p>
            <p><strong>Type:</strong> @vb.SessionType</p>
            <p><strong>Duration:</strong> @(vb.Duration.TotalMinutes) mins</p>

            <form method="post" asp-page-handler="CloseModals">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                <button class="btn">Close</button>
            </form>
        </div>
    </div>
}

<!-- ===== Edit (reschedule) modal ===== -->
@if (Model.ShowEditModal)
{
    <div class="app-modal-backdrop show">
        <div class="app-modal" role="dialog" aria-modal="true" aria-label="Reschedule booking">
            <h3>Reschedule booking</h3>
            <form method="post" asp-page-handler="Reschedule">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.Id" />
                <input type="hidden" asp-for="EditBookingId" />

                <label class="block" style="margin-bottom:6px;">New date & time</label>
                <input class="input" type="datetime-local" asp-for="NewStartLocal" />

                @if (Model.Conflicts.Any())
                {
                    <div class="card" style="margin-top:12px;border:1px solid #b30000;background:#2b0c0c;color:#ffdede;">
                        <div style="font-weight:800;margin-bottom:6px;">Conflicts</div>
                        <ul style="margin:0 0 8px 18px;">
                            @foreach (var c in Model.Conflicts) { <li>@c</li> }
                        </ul>
                        <div style="display:flex;gap:8px;">
                            <button class="btn btn-secondary" type="submit" name="override" value="false">Back</button>
                            <button class="btn" type="submit" name="override" value="true">Override & cancel conflicts</button>
                        </div>
                    </div>
                }
                else
                {
                    <div style="display:flex;gap:8px;margin-top:12px;">
                        <button class="btn" type="submit" name="override" value="false">Check & Apply</button>
                        <button class="btn btn-secondary" type="submit" formaction="?handler=CloseModals" formmethod="post">Cancel</button>
                    </div>
                }
            </form>
        </div>
    </div>
}

<script src="~/js/clients-modals.js"></script>
